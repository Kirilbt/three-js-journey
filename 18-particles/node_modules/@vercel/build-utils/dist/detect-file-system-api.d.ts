import type { Builder, BuilderFunctions, PackageJson, ProjectSettings } from './types';
interface Metadata {
    plugins: string[];
    hasDotOutput: boolean;
    hasMiddleware: boolean;
}
/**
 * If the Deployment can be built with the new File System API,
 * return the new Builder. Otherwise an "Exclusion Condition"
 * was hit so return `null` builder with a `reason` for exclusion.
 */
export declare function detectFileSystemAPI({ files, projectSettings, builders, vercelConfig, pkg, tag, enableFlag, }: {
    files: {
        [relPath: string]: any;
    };
    projectSettings: ProjectSettings;
    builders: Builder[];
    vercelConfig: {
        builds?: Builder[];
        functions?: BuilderFunctions;
    } | null | undefined;
    pkg: PackageJson | null | undefined;
    tag: string | undefined;
    enableFlag: boolean | undefined;
}): Promise<{
    metadata: Metadata;
    fsApiBuilder: Builder;
    reason: null;
} | {
    metadata: Metadata;
    fsApiBuilder: null;
    reason: string;
}>;
export {};
